name: Release NewNew

on:
  push:
    tags:
      - 'v*'  # Runs only when a tag like "v1.2.3" is pushed

jobs:
  build:
    name: Build Binary
    runs-on: macos-latest
    permissions:
      contents: write  # Add permission to create releases

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build Binary
        run: |
          cargo build --release
          # Create tarball directly from the release binary
          tar -czf "newnew-macos-${{ github.ref_name }}.tar.gz" -C target/release newnew

      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v4
        with:
          name: newnew-macos-${{ github.ref_name }}
          path: newnew-macos-${{ github.ref_name }}.tar.gz

  release:
    name: Publish GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Add permission to create releases

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-assets/newnew-macos-${{ github.ref_name }}/newnew-macos-${{ github.ref_name }}.tar.gz
          generate_release_notes: true

  update-homebrew:
    name: Update Homebrew Tap
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: mattresspadley

      - name: Get version without 'v' prefix
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Checkout the tap repository
        uses: actions/checkout@v4
        with:
          repository: mattresspadley/homebrew-tap
          token: ${{ steps.generate_token.outputs.token }}

      - name: Download the release binary
        run: |
          wget https://github.com/MattressPadley/newnew/releases/download/${{ github.ref_name }}/newnew-macos-${{ github.ref_name }}.tar.gz
          echo "SHA256=$(shasum -a 256 newnew-macos-${{ github.ref_name }}.tar.gz | awk '{ print $1 }')" >> $GITHUB_OUTPUT
        id: shasum

      - name: Update the formula
        run: |
          sed -i "s|version \".*\"|version \"${{ steps.version.outputs.VERSION }}\"|" Formula/newnew.rb
          sed -i "s|url \".*\"|url \"https://github.com/MattressPadley/newnew/releases/download/${{ github.ref_name }}/newnew-macos-${{ github.ref_name }}.tar.gz\"|" Formula/newnew.rb
          sed -i "s|sha256 \".*\"|sha256 \"${{ steps.shasum.outputs.SHA256 }}\"|" Formula/newnew.rb

      - name: Commit and push the update
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/newnew.rb
          git commit -m "Update newnew to version ${{ steps.version.outputs.VERSION }}"
          git push